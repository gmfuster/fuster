<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="400mm"
   height="400mm"
   viewBox="0 0 400 400"
   version="1.1"
   id="svg8"
   inkscape:version="1.0.2 (e86c870879, 2021-01-15, custom)"
   sodipodi:docname="deathtrooper.svg">
  <defs
     id="defs2">
    <pattern
       inkscape:collect="always"
       xlink:href="#Strips1_1white"
       id="pattern6584"
       patternTransform="matrix(8.64534,-4.2279914e-8,7.609323e-8,9.9999902,92.764391,310.18124)" />
    <pattern
       inkscape:collect="always"
       patternUnits="userSpaceOnUse"
       width="2"
       height="1"
       patternTransform="translate(0,0) scale(10,10)"
       id="Strips1_1white"
       inkscape:stockid="Stripes 1:1 white">
      <rect
         style="fill:white;stroke:none"
         x="0"
         y="-0.5"
         width="1"
         height="2"
         id="rect5529" />
    </pattern>
    <rect
       x="-120.63275"
       y="51.941491"
       width="312.64467"
       height="304.02279"
       id="rect4171" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect1772" />
    <rect
       x="-120.19642"
       y="115.57143"
       width="12.85119"
       height="35.529762"
       id="rect1766" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect1772-5" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect1785" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect1772-51" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect2776" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect1772-2" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect4106" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect1772-8" />
    <rect
       x="-92.982132"
       y="117.08333"
       width="45.357143"
       height="148.92262"
       id="rect6596" />
  </defs>
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.35"
     inkscape:cx="631.41193"
     inkscape:cy="608.56461"
     inkscape:document-units="mm"
     inkscape:current-layer="layer1"
     showgrid="false"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:document-rotation="0" />
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(171.60118,15.964286)">
    <path
       id="rect815"
       style="fill:none;fill-opacity:0.874372;stroke:none;stroke-width:3.64724;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       transform="matrix(0.26458333,0,0,0.26458333,-171.60118,-15.964286)"
       d="M 6.9785156,0 C 3.1125826,0 0,3.1125826 0,6.9785156 V 1504.832 c 0,3.866 3.1125826,6.9785 6.9785156,6.9785 H 1504.832 c 3.866,0 6.9785,-3.1125 6.9785,-6.9785 V 6.9785156 C 1511.8105,3.1125826 1508.698,0 1504.832,0 Z M 340.69141,249.26367 c 1.5719,-0.0314 3.14188,0.19789 4.70898,0.28516 3.00263,0.0804 6.00319,-0.0754 9.00586,-0.0527 0.49927,0.011 0.271,0.004 0.68359,0.0234 4.89423,0.23416 2.44676,2.61473 -0.14453,5.00391 1.4337,0.0692 2.85226,0.27558 4.28321,0.8125 0.69749,0.26171 1.24572,0.84092 1.9414,1.10742 0.22587,0.0865 -0.67124,-0.40333 -0.47656,-0.54688 0.35345,-0.26063 0.87595,-0.0465 1.31445,-0.0703 2.54595,-0.34983 5.08919,-0.29607 7.64844,-0.25586 5.99202,0.0117 11.98458,0.0435 17.97656,-0.006 3.67508,-0.03 6.00442,1.31678 6.99219,3.03516 h 6.78516 10.43945 7.2793 11.8164 9.89258 7.19336 0.40234 c 4.48695,0 6.95366,2.03494 7.41407,4.27734 1.06074,-1.10282 2.82855,-1.85591 5.25586,-1.83789 0.55184,0.004 1.13714,0.0483 1.75586,0.13672 1.17848,0.16836 2.35469,0.34982 3.53515,0.50391 0.89526,0.11686 1.9354,0.15982 2.89649,0.27734 0.0117,-0.0342 0.019,-0.0694 0.0312,-0.10351 0.16208,-0.45065 0.57221,-0.14101 1.05859,0.29101 0.78271,0.1899 1.41847,0.49696 1.71875,1.05469 0.0443,-0.006 0.0886,-0.0106 0.13086,-0.0273 -0.0417,0.0148 -0.0833,0.0301 -0.125,0.0449 0.0806,0.15421 0.13935,0.32561 0.16601,0.51953 0.0391,-0.009 0.0781,-0.0182 0.11719,-0.0274 3.09041,-0.72599 2.12406,-0.32352 -0.10351,0.39844 -0.0467,1.13743 -0.9386,2.89219 -3.16211,5.59375 0.0127,0.77035 -0.0175,1.53584 -0.16016,2.28321 -0.098,0.51336 -1.04709,0.008 -1.56836,-0.0313 -0.0728,-0.006 -0.17287,-0.0187 -0.25,-0.0254 -0.64952,0.5581 -1.28742,0.37757 -1.87109,-0.21093 -1.39436,-0.1805 -2.88938,-0.40468 -3.84375,-0.54102 -4.06671,-0.58096 -6.22101,-2.61076 -6.66211,-4.70312 -1.19299,1.29543 -3.30006,2.22851 -6.33399,2.22851 h -0.40234 -7.19336 -9.89258 -11.8164 -7.2793 -10.43945 -13.00586 c -3.62253,0 -5.92585,-1.32678 -6.92383,-3.01758 -3.99757,0.004 -7.9953,-0.004 -11.99219,-0.0137 -2.50624,-0.0433 -4.97004,-0.0715 -7.46875,0.25781 -3.96614,-0.0884 -2.37564,0.19038 -6.39062,-1.08203 0.10327,0.0282 0.23182,0.0563 0.29687,0.0371 0.0878,-0.026 0.22191,-0.23236 0.13086,-0.24219 -1.28833,-0.1391 -2.59324,0.0241 -3.89062,0.0508 -0.8837,7.10845 -0.22557,6.84769 -4.2754,6.05859 -0.26203,-0.0511 -0.51057,-0.11158 -0.75585,-0.17383 -0.93138,-0.13354 -1.86222,-0.27474 -2.79493,-0.39844 -2.61175,-0.3464 -5.22775,-0.65766 -7.84179,-0.98632 -3.10991,-0.39103 -5.16463,-1.64919 -6.22071,-3.15235 -1.15131,0.13329 -2.40425,0.26285 -4.09961,0.39844 -0.54793,0.0438 -1.10072,-0.007 -1.65039,-0.01 -0.12355,-1.08216 0.0892,0.12046 -1.93945,1.11915 -2.39649,1.17969 -2.54691,0.76626 -4.92383,1.09374 -0.99925,0.1377 -1.98659,0.34531 -2.98047,0.51758 -1.39587,0.17353 -2.79163,0.34602 -4.1875,0.51953 -0.9867,-0.014 -1.97609,-0.0342 -2.96484,-0.043 0.0172,0.36212 0.0471,0.72366 0.0605,1.08593 0.003,0.0841 -0.16779,0 -0.25196,0 h -0.3789 c -0.19183,3.06919 -0.31873,2.17534 -0.39258,0 h -0.99805 -9.5957 c -2.91693,0 -4.97617,-0.86251 -6.19141,-2.08008 -5.51456,0.0745 -11.03119,0.21948 -16.53711,0.0605 -4.25055,-0.12258 -6.68811,-1.96852 -7.32421,-4.04883 -3.28808,0.008 -6.57551,0.0269 -9.86329,0.0684 -1.22344,-0.0428 -2.44663,-0.0886 -3.66992,-0.13281 -0.0256,0.35991 -0.043,0.72023 -0.0723,1.08008 v 0.002 0.002 c 0.13665,1.68144 0.24373,3.36338 0.22265,5.04882 -0.003,0.21949 -0.36967,0.0715 -0.63476,0.0254 -0.1907,3.03069 -0.3151,2.1421 -0.38868,-0.0254 h -8.57421 c -4.9832,0 -7.4813,-2.50851 -7.49805,-5.02539 -0.51495,-0.0114 -1.03032,-0.0254 -1.54492,-0.0254 h -9.86524 c -0.9663,0 -2.48433,0.81232 -3.00781,0.16016 -0.25065,0.24787 -1.09534,-0.16016 -1.57031,-0.16016 h -5.55469 -8.83984 -6.70117 c -0.27397,1.16236 -1.42647,1.45512 -3.83594,2.65625 -1.16768,0.0631 -1.95568,0.67987 -3.08008,0.91602 -0.15257,0.032 0.44626,-0.42775 0.3125,-0.34766 -0.37514,0.22457 -0.67085,0.56404 -1.04688,0.78711 -0.20029,0.11881 0.34205,-0.31329 0.51368,-0.4707 0.16133,-0.29288 0.76353,-1.06297 0.48437,-0.87891 -4.49637,2.96475 -3.19675,4.04207 -7.90234,3.36328 -0.45333,-0.0654 -0.89574,-0.18995 -1.34375,-0.28515 -0.0702,-0.0363 -0.28441,-0.0803 -0.21094,-0.10938 0.33442,-0.13274 1.41321,-0.2568 1.05469,-0.22656 -0.93591,0.0787 -1.85377,0.36775 -2.79297,0.37305 -4.38459,0.0239 -8.82346,-2.07096 -13.04102,-2.89844 v 0.002 c -9.81291,-1.92527 -7.19893,-12.43007 2.44922,-9.80078 0.24702,0.0673 0.4935,0.13667 0.74024,0.20508 1.55166,-1.91343 4.60377,-3.48042 6.97851,-3.3418 -0.48625,0.091 0.98727,-0.0726 1.47852,-0.13086 0.52186,-0.0618 1.03923,-0.10894 1.55078,-0.13281 0.38366,-0.0179 0.76398,-0.0212 1.14258,-0.008 1.13578,0.0445 2.25112,0.25916 3.35547,0.77539 0.63115,0.32506 0.9443,0.46169 1.03125,0.52734 0.70108,-0.0489 1.3923,-0.20234 2.09179,-0.28711 1.53579,-0.053 2.94853,-0.01 4.34766,0.29492 1.20593,-0.66388 2.81706,-1.08398 4.84766,-1.08398 h 7.57617 8.83984 5.55469 c 0.47495,0 1.3196,-0.40795 1.57031,-0.16016 0.52348,-0.65216 2.04151,0.16016 3.00781,0.16016 h 9.86524 c 1.69411,0 3.39106,0.1031 5.08203,0 0.62915,-0.0384 1.22739,-0.28113 1.8418,-0.42188 1.13719,-1.1074 5.17385,-0.83455 5.76171,-0.83984 3.2675,-0.0292 6.55931,0.20418 9.82618,0.31836 5.28963,-0.0888 10.5808,-0.0939 15.87109,-0.0742 1.94714,-0.10118 3.9391,0.20262 5.87891,0.01 1.66247,-0.16646 3.27888,-0.64283 4.92382,-0.93555 3.6064,-0.66836 7.21408,-0.21354 10.82227,-0.0527 1.43691,0.0638 5.847,0.0393 6.76367,0.0391 3.98826,-0.05 7.97647,-0.0822 11.96485,-0.0625 2.07886,-0.24914 4.26964,0.29351 6.34375,0.002 1.9012,-0.26753 3.63422,-1.24178 5.47851,-1.77539 1.75371,-0.5074 3.53785,-0.90346 5.30664,-1.35547 3.63106,-0.40155 7.26373,-1.08319 10.92774,-1.15625 z m 131.41406,13.95313 c -0.003,-0.005 -0.003,-0.0122 -0.006,-0.0176 -0.52474,0.0709 -1.17052,-0.56773 -1.71875,-1.05469 -0.33954,-0.0824 -0.70851,-0.14087 -1.08984,-0.1875 -0.26636,0.78016 -0.38468,1.5861 -0.41797,2.4082 1.07749,-0.3828 2.15493,-0.76563 3.23242,-1.14843 z m -122.66406,7.68945 c -0.003,0.0202 -0.007,0.0403 -0.01,0.0605 -0.006,0.0439 0.16877,-0.0381 0.125,-0.0449 -0.0383,-0.006 -0.0769,-0.01 -0.11523,-0.0156 z" />
    <text
       xml:space="preserve"
       id="text1770"
       style="font-style:normal;font-weight:normal;font-size:10.5833px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect1772);fill:#000000;fill-opacity:1;stroke:none;"
       transform="matrix(6.1833599,0,0,3.313693,477.11578,-321.01598)"><tspan
         x="-92.982422"
         y="126.73945"><tspan>D
</tspan></tspan><tspan
         x="-92.982422"
         y="139.96858"><tspan>E
</tspan></tspan><tspan
         x="-92.982422"
         y="153.1977"><tspan>A
</tspan></tspan><tspan
         x="-92.982422"
         y="166.42683"><tspan>T
</tspan></tspan><tspan
         x="-92.982422"
         y="179.65595"><tspan>H</tspan></tspan></text>
    <path
       style="fill:#fffff9;fill-opacity:1;stroke:#2c1b1b;stroke-width:15.2716;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d=""
       id="path2887"
       transform="matrix(0.26458333,0,0,0.26458333,-171.60118,-15.964286)" />
    <path
       style="fill:#fffff9;fill-opacity:1;stroke:#2c1b1b;stroke-width:10.7987;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d=""
       id="path2889"
       transform="matrix(0.26458333,0,0,0.26458333,-171.60118,-15.964286)" />
    <rect
       style="fill:#cbc8c8;fill-opacity:1;stroke:none;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="rect3447"
       width="1.6036301"
       height="0"
       x="-57.744362"
       y="321.32986"
       ry="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m -278.50899,223.50921 v 0"
       id="path3473" />
    <text
       xml:space="preserve"
       id="text4169"
       style="fill:black;fill-opacity:1;stroke:none;font-family:sans-serif;font-style:normal;font-weight:normal;font-size:10.58333333px;line-height:1.25;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect4171);" />
    <path
       id="rect4423"
       style="fill:#111108;fill-opacity:1;stroke:none;stroke-width:1.11458;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 19.451778,68.939919 h 35.179779 c 33.674396,0 50.300193,9.198936 50.445823,44.480291 l 0.75595,183.15115 c 0.1405,34.03994 -22.835987,46.54173 -51.201773,46.54173 H 19.451778 c -28.3657832,0 -51.201775,-20.75762 -51.201775,-46.54173 v -181.0897 c 0,-25.784124 22.8359918,-46.541741 51.201775,-46.541741 z"
       sodipodi:nodetypes="sssssssss" />
    <path
       id="path4427"
       style="mix-blend-mode:normal;fill:#312f2f;fill-opacity:1;stroke:none;stroke-width:0.957013;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 41.577349,86.248833 c -0.81756,19.300597 -46.9590501,-6.027105 -51.78274,22.155407 -3.39453,19.83264 -11.20206,44.28265 -22.30059,26.30955 C -57.482121,94.267123 -63.580311,6.710247 1.8898489,48.861581 19.821429,60.406385 42.451349,65.615946 41.577349,86.248833 Z"
       sodipodi:nodetypes="sssss" />
    <ellipse
       style="fill:none;fill-opacity:1;stroke:#ededed;stroke-width:2.67417;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="path6520"
       cx="41.123821"
       cy="146.93158"
       rx="47.600555"
       ry="46.360462" />
    <path
       id="path6522"
       style="fill:none;fill-opacity:1;stroke:#ededed;stroke-width:2.13907;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       inkscape:transform-center-x="0.98947423"
       inkscape:transform-center-y="30.178708"
       d="m 92.612973,198.94018 -106.936045,0.9449 33.267083,138.39648 40.510135,-0.34722 z" />
    <rect
       style="fill:url(#pattern6584);fill-opacity:1;stroke:#ededed;stroke-width:1.56043;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="rect6554"
       width="135.59921"
       height="31.454466"
       x="202.95386"
       y="-54.655838"
       ry="0"
       transform="matrix(0.00323221,0.99999478,-0.99999708,0.00241582,0,0)" />
    <text
       xml:space="preserve"
       id="text1770-5"
       style="font-style:normal;font-weight:normal;font-size:10.5833px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect1772-8);fill:#000000;fill-opacity:1;stroke:none;"
       transform="matrix(6.1833599,0,0,2.5843893,686.20936,-253.20058)"><tspan
         x="-92.982422"
         y="126.73945"><tspan>T
</tspan></tspan><tspan
         x="-92.982422"
         y="139.96858"><tspan>R
</tspan></tspan><tspan
         x="-92.982422"
         y="153.1977"><tspan>O
</tspan></tspan><tspan
         x="-92.982422"
         y="166.42683"><tspan>O
</tspan></tspan><tspan
         x="-92.982422"
         y="179.65595"><tspan>P
</tspan></tspan><tspan
         x="-92.982422"
         y="192.88508"><tspan>E
</tspan></tspan><tspan
         x="-92.982422"
         y="206.11421"><tspan>R</tspan></tspan></text>
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer 2" />
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
